name: Upgrade
on:
  repository_dispatch:
    types: [upgrade]
env:
  TEMPLATE_REPO: theowenyoung/gatsby-starter-bloga-timeline
  UPGRADE_BRANCH: bloga-automated-upgrade
jobs:  
  init:
    runs-on: ubuntu-latest
    # outpus result type is string, true will be "true"
    outputs:
      templateRepo: ${{ env.TEMPLATE_REPO }}
      isFirstCommit: ${{ (github.event.commits[0].message == 'Initial commit') && (github.run_number == 1) }}
      repositoryName: ${{ steps.repositoryName.outputs.result}}
      sourceBranch: ${{ steps.sourceBranch.outputs.result }}
      deployBranch: ${{ steps.deployBranch.outputs.result }}
      isSourceBranch: ${{ steps.isSourceBranch.outputs.result }}
    steps:
      - run: echo init...
      - uses: jungwinter/split@v1.1.0
        id: split
        with:
          msg: ${{ github.repository }}
          seperator: "/"
      - id: repositoryName
        uses: actions/github-script@v2
        with:
          script: return context.repo.repo
          result-encoding: string
      - id: sourceBranch
        uses: actions/github-script@v2
        with:
          script: |
            if(context.repo.repo === `${context.repo.owner}.github.io`){
              return 'source'
            }else{
              return 'master'
            }
          result-encoding: string
      - id: deployBranch
        uses: actions/github-script@v2
        with:
          script: |
            if(context.repo.repo === `${context.repo.owner}.github.io`){
              return 'master'
            }else{
              return 'gh-pages'
            }
          result-encoding: string
      - id: isSourceBranch
        uses: actions/github-script@v2
        env:
          SOURCE_BRANCH: ${{ steps.sourceBranch.outputs.result }}
        with:
          script: |
            if(`refs/heads/${process.env.SOURCE_BRANCH}` === context.ref){
              return true
            }else{
              return false
            }
  upgrade:
    needs: init
    if: (github.repository != needs.init.outputs.templateRepo)
    runs-on: ubuntu-latest
    steps:
    
    - name: Set up Python
      uses: actions/setup-python@v1
      with:
        python-version: 3.7
    
    - name: checkout latest tempalte source 
      uses: actions/checkout@v2
      with:
        repository: '${{ env.TEMPLATE_REPO}}'
        path: 'new_files'
        persist-credentials: false
        
    - name: copy this repo's contents
      uses: actions/checkout@v2
      with:
        path: 'current_files'
        persist-credentials: false


    - name: copy new files
      run: |
        # remove files you don't want to copy from current version of fastpages
        cd new_files        
   
        # copy new files from fastpages into your repo
        for file in $(ls | egrep -v "(assets|_sass)"); do 
          if [[ -f "$file" ]] || [[ -d "$file" ]] 
          then
            echo "copying $file"; 
            cp -r $file ../current_files;
          fi
        done

        # copy action workflows
        cp -r .github ../current_files
    - uses: webfactory/ssh-agent@v0.4.0
      with:
        ssh-private-key: ${{ secrets.SSH_DEPLOY_KEY }}
    - name: commit changes to branch
      run: |
        # commit changes
        cd current_files
        git config --global user.email "${GH_USERNAME}@users.noreply.github.com"
        git config --global user.name "${GH_USERNAME}"
        git remote remove origin
        git remote add origin "git@github.com:${GITHUB_REPOSITORY}.git"

        git checkout -b $UPGRADE_BRANCH
        git add -A
        git commit -m 'upgrade bloga'
        git push -f -u origin $UPGRADE_BRANCH
      env: 
        GH_USERNAME: github-actions
        SOURCE_BRANCH: ${{ needs.init.outputs.sourceBranch }}
    - name: Open a PR
      id: pr
      uses: actions/github-script@v2
      env:
        SOURCE_BRANCH: ${{ needs.init.outputs.sourceBranch }}
      with:
        github-token: ${{secrets.GITHUB_TOKEN}}
        script: |
          var fs = require('fs');
          github.pulls.create({
                        owner: context.repo.owner,
                        repo: context.repo.repo,
                        title: '[bloga] Update repo with changes from template',
                        head: process.env.UPGRADE_BRANCH,
                        base: process.env.SOURCE_BRANCH,
                        body: `test body content`
                        })
                      .then(result => console.log(`::set-output name=pr_num::${result.data.number}`))
  